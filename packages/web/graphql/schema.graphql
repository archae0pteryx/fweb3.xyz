### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Content {
  createdAt: Date!
  html: String
  id: String
  prompt: String
  title: String
  type: String
  updatedAt: Date!
}

scalar Date

type Feature {
  createdAt: String
  flag: String
  id: String
  updatedAt: String
  value: Boolean
}

type Mutation {
  createContent(prompt: String!, title: String!, type: String!): Content!
  createUser(address: String!, email: String!): User!
  updateUser(data: UserInputType): User
  upsertFeature(flag: String!, value: Boolean!): Feature!
}

type Query {
  allContent: [Content]!
  allFeatures: [Feature]!
  allUsers: [User]!
  findContent(type: String!): Content!
  findFeature(flag: String!): Feature
  findUser(address: String!): User
  requestContent(type: String, types: [String]): Content!
}

type User {
  address: String
  createdAt: String
  disabled: Boolean
  emailMessageId: String
  emailSentAt: String
  id: String
  role: String
  salt: String
  token: String
  updatedAt: String
  verified: Boolean
}

input UserInputType {
  address: String
  disabled: Boolean
  discord: String
  email: String
  emailMessageId: String
  emailSentAt: String
  role: String
  salt: String
  token: String
  verified: Boolean
}